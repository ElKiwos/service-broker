
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: couchbaseservicebrokerconfigs.broker.couchbase.com
spec:
  group: broker.couchbase.com
  names:
    kind: CouchbaseServiceBrokerConfig
    listKind: CouchbaseServiceBrokerConfigList
    plural: couchbaseservicebrokerconfigs
    singular: couchbaseservicebrokerconfig
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CouchbaseServiceBrokerConfigSpec defines the top level service
            broker configuration data structure.
          properties:
            bindings:
              description: Bindings is a set of bindings that link service plans to
                resource templates and is required.
              items:
                description: CouchbaseServiceBrokerConfigBinding binds a service plan
                  to a set of templates required to realize that plan.
                properties:
                  name:
                    description: Name is a unique identifier for the binding.
                    minLength: 1
                    type: string
                  plan:
                    description: Plan is the name of the service plan to bind to.
                    minLength: 1
                    type: string
                  service:
                    description: Service is the name of the service offering to bind
                      to.
                    minLength: 1
                    type: string
                  serviceBinding:
                    description: ServiceBinding defines the set of templates to render
                      and create when a new service binding is created.  This attribute
                      is optional based on whether the service plan allows binding.
                    properties:
                      parameters:
                        description: Parameters allows registry parameters to be mutated
                          and cached when a service instance is created.  These are
                          only executed on instance creation.
                        items:
                          description: CouchbaseServiceBrokerConfigTemplateParameter
                            defines a parameter substitution on a resource template.
                          properties:
                            default:
                              description: Default specifies the default value is
                                if the parameter is not defined.
                              properties:
                                bool:
                                  description: Bool specifies the default boolean
                                    value if the parameter is not defined.
                                  type: boolean
                                int:
                                  description: Int specifies the default int value
                                    if the parameter is not defined.
                                  type: integer
                                object:
                                  description: Object specifies the default value
                                    if the parameter is not defined.
                                  type: object
                                string:
                                  description: String specifies the default string
                                    value if the parameter is not defined.
                                  type: string
                              type: object
                            destinations:
                              description: Destinations is the destination of the
                                parameter.
                              items:
                                description: CouchbaseServiceBrokerConfigTemplateParameterDestination
                                  defines where to patch parameters into the resource
                                  template.
                                properties:
                                  path:
                                    description: Path is a JSON pointer in the resource
                                      template to patch the parameter.
                                    type: string
                                  registry:
                                    description: Registry is a key to store the value
                                      to in the registry.
                                    type: string
                                type: object
                              minItems: 1
                              type: array
                            name:
                              description: Name is a textual name used to uniquely
                                identify the parameter for the template.
                              minLength: 1
                              type: string
                            required:
                              description: Required will cause an error if a parameter
                                is not defined.
                              type: boolean
                            source:
                              description: Source is source of the parameter.
                              properties:
                                format:
                                  description: Format allows the collection of an
                                    arbitrary number of parameters into a string format.
                                  properties:
                                    parameters:
                                      description: Parameters is the set of parameters
                                        corresponding to the format string. All parameters
                                        must exist or the formatting operation will
                                        return nil.
                                      items:
                                        description: CouchbaseServiceBrokerConfigTemplateParameterSourceFormatParameter
                                          is a parameter for a formatting operation.
                                        properties:
                                          parameter:
                                            description: Parameter, if set, uses the
                                              corresponding request parameter for
                                              the parameter source.
                                            type: string
                                          registry:
                                            description: Registry , if set, uses the
                                              corresponding registry value for the
                                              parameter source.
                                            pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                            type: string
                                        type: object
                                      minItems: 1
                                      type: array
                                    string:
                                      description: String is the format string to
                                        use.
                                      type: string
                                  required:
                                  - parameters
                                  - string
                                  type: object
                                generateCertificate:
                                  description: GenerateCertificate allows the generation
                                    of a public certificate.
                                  properties:
                                    alternativeNames:
                                      description: AlternativeNames are only valid
                                        for "server" and "client" certificates.
                                      properties:
                                        dns:
                                          description: DNS is only relevant for "server"
                                            certificate types.
                                          items:
                                            description: CouchbaseServiceBrokerConfigTemplateParameterSourceFormatParameter
                                              is a parameter for a formatting operation.
                                            properties:
                                              parameter:
                                                description: Parameter, if set, uses
                                                  the corresponding request parameter
                                                  for the parameter source.
                                                type: string
                                              registry:
                                                description: Registry , if set, uses
                                                  the corresponding registry value
                                                  for the parameter source.
                                                pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                                type: string
                                            type: object
                                          type: array
                                        email:
                                          description: Email is only relevant for
                                            "client" certificate types.
                                          items:
                                            description: CouchbaseServiceBrokerConfigTemplateParameterSourceFormatParameter
                                              is a parameter for a formatting operation.
                                            properties:
                                              parameter:
                                                description: Parameter, if set, uses
                                                  the corresponding request parameter
                                                  for the parameter source.
                                                type: string
                                              registry:
                                                description: Registry , if set, uses
                                                  the corresponding registry value
                                                  for the parameter source.
                                                pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    ca:
                                      description: CA is the CA to sign with, it will
                                        self sign otherwise.
                                      properties:
                                        certificate:
                                          description: Certificate is the CA's certificate.
                                          properties:
                                            parameter:
                                              description: Parameter, if set, uses
                                                the corresponding request parameter
                                                for the parameter source.
                                              type: string
                                            registry:
                                              description: Registry , if set, uses
                                                the corresponding registry value for
                                                the parameter source.
                                              pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                              type: string
                                          type: object
                                        key:
                                          description: Key is the CA's private key.
                                          properties:
                                            parameter:
                                              description: Parameter, if set, uses
                                                the corresponding request parameter
                                                for the parameter source.
                                              type: string
                                            registry:
                                              description: Registry , if set, uses
                                                the corresponding registry value for
                                                the parameter source.
                                              pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                              type: string
                                          type: object
                                      required:
                                      - certificate
                                      - key
                                      type: object
                                    key:
                                      description: Key is the private key to generate
                                        the certificate from.
                                      properties:
                                        parameter:
                                          description: Parameter, if set, uses the
                                            corresponding request parameter for the
                                            parameter source.
                                          type: string
                                        registry:
                                          description: Registry , if set, uses the
                                            corresponding registry value for the parameter
                                            source.
                                          pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                          type: string
                                      type: object
                                    lifetime:
                                      description: Lifetime is how long the certificate
                                        will last.
                                      type: string
                                    name:
                                      description: Name is the certificate name.
                                      properties:
                                        commonName:
                                          description: CommonName is what the certificate
                                            name is usually referred to.
                                          type: string
                                      required:
                                      - commonName
                                      type: object
                                    usage:
                                      description: Usage is what the certificate is
                                        used for.  If server or client is specified
                                        then the CA parameter must be populated.  If
                                        CA is not specified for a "ca" certificate
                                        then it will be self signed.
                                      enum:
                                      - ca
                                      - server
                                      - client
                                      type: string
                                  required:
                                  - key
                                  - lifetime
                                  - name
                                  - usage
                                  type: object
                                generateKey:
                                  description: GenerateKey allow the generation of
                                    a private key.
                                  properties:
                                    bits:
                                      description: Bits is the number of bits of key
                                        to generate, only relevant for RSA.
                                      type: integer
                                    encoding:
                                      description: Encoding is how to package the
                                        key.
                                      type: string
                                    type:
                                      description: Type is the type of key as defined
                                        above.
                                      type: string
                                  required:
                                  - encoding
                                  - type
                                  type: object
                                generatePassword:
                                  description: GeneratePassword allows the generation
                                    of a random string, useful for password generation.
                                  properties:
                                    dictionary:
                                      description: Dictionary is the string of symbols
                                        to use.  This defaults to [a-zA-Z0-9].
                                      type: string
                                    length:
                                      description: Length is the length of the string
                                        to generate.
                                      minimum: 1
                                      type: integer
                                  required:
                                  - length
                                  type: object
                                parameter:
                                  description: Parameter, if set, uses the corresponding
                                    request parameter for the parameter source.
                                  type: string
                                registry:
                                  description: Registry, if set, uses the corresponding
                                    registry value for the parameter source.
                                  pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                  type: string
                                template:
                                  description: Template allows the recursive rendering
                                    and inclusion of a named template.
                                  type: string
                              type: object
                          required:
                          - destinations
                          - name
                          type: object
                        type: array
                      templates:
                        description: Templates defines all the templates that will
                          be created, in order, by the service broker for this operation.
                        items:
                          type: string
                        type: array
                    type: object
                  serviceInstance:
                    description: ServiceInstance defines the set of templates to render
                      and create when a new service instance is created.
                    properties:
                      parameters:
                        description: Parameters allows registry parameters to be mutated
                          and cached when a service instance is created.  These are
                          only executed on instance creation.
                        items:
                          description: CouchbaseServiceBrokerConfigTemplateParameter
                            defines a parameter substitution on a resource template.
                          properties:
                            default:
                              description: Default specifies the default value is
                                if the parameter is not defined.
                              properties:
                                bool:
                                  description: Bool specifies the default boolean
                                    value if the parameter is not defined.
                                  type: boolean
                                int:
                                  description: Int specifies the default int value
                                    if the parameter is not defined.
                                  type: integer
                                object:
                                  description: Object specifies the default value
                                    if the parameter is not defined.
                                  type: object
                                string:
                                  description: String specifies the default string
                                    value if the parameter is not defined.
                                  type: string
                              type: object
                            destinations:
                              description: Destinations is the destination of the
                                parameter.
                              items:
                                description: CouchbaseServiceBrokerConfigTemplateParameterDestination
                                  defines where to patch parameters into the resource
                                  template.
                                properties:
                                  path:
                                    description: Path is a JSON pointer in the resource
                                      template to patch the parameter.
                                    type: string
                                  registry:
                                    description: Registry is a key to store the value
                                      to in the registry.
                                    type: string
                                type: object
                              minItems: 1
                              type: array
                            name:
                              description: Name is a textual name used to uniquely
                                identify the parameter for the template.
                              minLength: 1
                              type: string
                            required:
                              description: Required will cause an error if a parameter
                                is not defined.
                              type: boolean
                            source:
                              description: Source is source of the parameter.
                              properties:
                                format:
                                  description: Format allows the collection of an
                                    arbitrary number of parameters into a string format.
                                  properties:
                                    parameters:
                                      description: Parameters is the set of parameters
                                        corresponding to the format string. All parameters
                                        must exist or the formatting operation will
                                        return nil.
                                      items:
                                        description: CouchbaseServiceBrokerConfigTemplateParameterSourceFormatParameter
                                          is a parameter for a formatting operation.
                                        properties:
                                          parameter:
                                            description: Parameter, if set, uses the
                                              corresponding request parameter for
                                              the parameter source.
                                            type: string
                                          registry:
                                            description: Registry , if set, uses the
                                              corresponding registry value for the
                                              parameter source.
                                            pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                            type: string
                                        type: object
                                      minItems: 1
                                      type: array
                                    string:
                                      description: String is the format string to
                                        use.
                                      type: string
                                  required:
                                  - parameters
                                  - string
                                  type: object
                                generateCertificate:
                                  description: GenerateCertificate allows the generation
                                    of a public certificate.
                                  properties:
                                    alternativeNames:
                                      description: AlternativeNames are only valid
                                        for "server" and "client" certificates.
                                      properties:
                                        dns:
                                          description: DNS is only relevant for "server"
                                            certificate types.
                                          items:
                                            description: CouchbaseServiceBrokerConfigTemplateParameterSourceFormatParameter
                                              is a parameter for a formatting operation.
                                            properties:
                                              parameter:
                                                description: Parameter, if set, uses
                                                  the corresponding request parameter
                                                  for the parameter source.
                                                type: string
                                              registry:
                                                description: Registry , if set, uses
                                                  the corresponding registry value
                                                  for the parameter source.
                                                pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                                type: string
                                            type: object
                                          type: array
                                        email:
                                          description: Email is only relevant for
                                            "client" certificate types.
                                          items:
                                            description: CouchbaseServiceBrokerConfigTemplateParameterSourceFormatParameter
                                              is a parameter for a formatting operation.
                                            properties:
                                              parameter:
                                                description: Parameter, if set, uses
                                                  the corresponding request parameter
                                                  for the parameter source.
                                                type: string
                                              registry:
                                                description: Registry , if set, uses
                                                  the corresponding registry value
                                                  for the parameter source.
                                                pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    ca:
                                      description: CA is the CA to sign with, it will
                                        self sign otherwise.
                                      properties:
                                        certificate:
                                          description: Certificate is the CA's certificate.
                                          properties:
                                            parameter:
                                              description: Parameter, if set, uses
                                                the corresponding request parameter
                                                for the parameter source.
                                              type: string
                                            registry:
                                              description: Registry , if set, uses
                                                the corresponding registry value for
                                                the parameter source.
                                              pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                              type: string
                                          type: object
                                        key:
                                          description: Key is the CA's private key.
                                          properties:
                                            parameter:
                                              description: Parameter, if set, uses
                                                the corresponding request parameter
                                                for the parameter source.
                                              type: string
                                            registry:
                                              description: Registry , if set, uses
                                                the corresponding registry value for
                                                the parameter source.
                                              pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                              type: string
                                          type: object
                                      required:
                                      - certificate
                                      - key
                                      type: object
                                    key:
                                      description: Key is the private key to generate
                                        the certificate from.
                                      properties:
                                        parameter:
                                          description: Parameter, if set, uses the
                                            corresponding request parameter for the
                                            parameter source.
                                          type: string
                                        registry:
                                          description: Registry , if set, uses the
                                            corresponding registry value for the parameter
                                            source.
                                          pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                          type: string
                                      type: object
                                    lifetime:
                                      description: Lifetime is how long the certificate
                                        will last.
                                      type: string
                                    name:
                                      description: Name is the certificate name.
                                      properties:
                                        commonName:
                                          description: CommonName is what the certificate
                                            name is usually referred to.
                                          type: string
                                      required:
                                      - commonName
                                      type: object
                                    usage:
                                      description: Usage is what the certificate is
                                        used for.  If server or client is specified
                                        then the CA parameter must be populated.  If
                                        CA is not specified for a "ca" certificate
                                        then it will be self signed.
                                      enum:
                                      - ca
                                      - server
                                      - client
                                      type: string
                                  required:
                                  - key
                                  - lifetime
                                  - name
                                  - usage
                                  type: object
                                generateKey:
                                  description: GenerateKey allow the generation of
                                    a private key.
                                  properties:
                                    bits:
                                      description: Bits is the number of bits of key
                                        to generate, only relevant for RSA.
                                      type: integer
                                    encoding:
                                      description: Encoding is how to package the
                                        key.
                                      type: string
                                    type:
                                      description: Type is the type of key as defined
                                        above.
                                      type: string
                                  required:
                                  - encoding
                                  - type
                                  type: object
                                generatePassword:
                                  description: GeneratePassword allows the generation
                                    of a random string, useful for password generation.
                                  properties:
                                    dictionary:
                                      description: Dictionary is the string of symbols
                                        to use.  This defaults to [a-zA-Z0-9].
                                      type: string
                                    length:
                                      description: Length is the length of the string
                                        to generate.
                                      minimum: 1
                                      type: integer
                                  required:
                                  - length
                                  type: object
                                parameter:
                                  description: Parameter, if set, uses the corresponding
                                    request parameter for the parameter source.
                                  type: string
                                registry:
                                  description: Registry, if set, uses the corresponding
                                    registry value for the parameter source.
                                  pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                  type: string
                                template:
                                  description: Template allows the recursive rendering
                                    and inclusion of a named template.
                                  type: string
                              type: object
                          required:
                          - destinations
                          - name
                          type: object
                        type: array
                      templates:
                        description: Templates defines all the templates that will
                          be created, in order, by the service broker for this operation.
                        items:
                          type: string
                        type: array
                    type: object
                required:
                - name
                - plan
                - service
                type: object
              minItems: 1
              type: array
            catalog:
              description: Catalog is the service catalog definition and is required.
              properties:
                services:
                  description: Services is an array of Service Offering objects
                  items:
                    description: 'ServiceOffering is defined by: https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#body'
                    properties:
                      allow_context_updates:
                        description: AllowContextUpdates specifies whether a Service
                          Instance supports Update requests when contextual data for
                          the Service Instance in the Platform changes.
                        type: boolean
                      bindable:
                        description: Bindable specifies whether Service Instances
                          of the service can be bound to applications. This specifies
                          the default for all Service Plans of this Service Offering.
                          Service Plans can override this field (see Service Plan
                          Object).
                        type: boolean
                      bindings_retrievable:
                        description: BindingsRetrievable specifies whether the Fetching
                          a Service Binding endpoint is supported for all Service
                          Plans.
                        type: boolean
                      dashboard_client:
                        description: Dashboard is a Cloud Foundry extension described
                          in Catalog Extensions. Contains the data necessary to activate
                          the Dashboard SSO feature for this service.
                        properties:
                          id:
                            description: ID is the id of the OAuth client that the
                              dashboard will use. If present, MUST be a non-empty
                              string.
                            minLength: 1
                            type: string
                          redirected_uri:
                            description: RedirectedURI is a URI for the service dashboard.
                              Validated by the OAuth token server when the dashboard
                              requests a token.
                            type: string
                          secret:
                            description: Secret is a secret for the dashboard client.
                              If present, MUST be a non-empty string.
                            minLength: 1
                            type: string
                        required:
                        - id
                        - secret
                        type: object
                      description:
                        description: Descriptions is a short description of the service.
                          MUST be a non-empty string.
                        minLength: 1
                        type: string
                      id:
                        description: ID is an identifier used to correlate this Service
                          Offering in future requests to the Service Broker. This
                          MUST be globally unique such that Platforms (and their users)
                          MUST be able to assume that seeing the same value (no matter
                          what Service Broker uses it) will always refer to this Service
                          Offering. MUST be a non-empty string. Using a GUID is RECOMMENDED.
                        minLength: 1
                        type: string
                      instances_retrievable:
                        description: InstancesRetrievable specifies whether the Fetching
                          a Service Instance endpoint is supported for all Service
                          Plans.
                        type: boolean
                      metadata:
                        description: Metadata is an opaque object of metadata for
                          a Service Offering. It is expected that Platforms will treat
                          this as a blob. Note that there are conventions in existing
                          Service Brokers and Platforms for fields that aid in the
                          display of catalog data.
                        type: object
                      name:
                        description: Name is the name of the Service Offering. MUST
                          be unique across all Service Offering objects returned in
                          this response. MUST be a non-empty string. Using a CLI-friendly
                          name is RECOMMENDED.
                        minLength: 1
                        type: string
                      plan_updatable:
                        description: PlanUpdatable is whether the Service Offering
                          supports upgrade/downgrade for Service Plans by default.
                          Service Plans can override this field (see Service Plan).
                          Please note that the misspelling of the attribute plan_updatable
                          as plan_updateable was done by mistake. We have opted to
                          keep that misspelling instead of fixing it and thus breaking
                          backward compatibility. Defaults to false.
                        type: boolean
                      plans:
                        description: ServicePlan is a list of Service Plans for this
                          Service Offering, schema is defined below. MUST contain
                          at least one Service Plan.
                        items:
                          description: 'ServicePlan is defined by: https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#body'
                          properties:
                            bindable:
                              description: Bindable specifies whether Service Instances
                                of the Service Plan can be bound to applications.
                                This field is OPTIONAL. If specified, this takes precedence
                                over the bindable attribute of the Service Offering.
                                If not specified, the default is derived from the
                                Service Offering.
                              type: boolean
                            description:
                              description: Description is a short description of the
                                Service Plan. MUST be a non-empty string.
                              minLength: 1
                              type: string
                            free:
                              description: Free, when false, Service Instances of
                                this Service Plan have a cost. The default is true.
                              type: boolean
                            id:
                              description: ID is an identifier used to correlate this
                                Service Offering in future requests to the Service
                                Broker. This MUST be globally unique such that Platforms
                                (and their users) MUST be able to assume that seeing
                                the same value (no matter what Service Broker uses
                                it) will always refer to this Service Offering. MUST
                                be a non-empty string. Using a GUID is RECOMMENDED.
                              minLength: 1
                              type: string
                            maintentance_info:
                              description: MaintenanceInfo is maintenance information
                                for a Service Instance which is provisioned using
                                the Service Plan. If provided, a version string MUST
                                be provided and platforms MAY use this when Provisioning
                                or Updating a Service Instance.
                              properties:
                                version:
                                  type: string
                              type: object
                            maximum_polling_duration:
                              description: MaximumPollingDuration is a duration, in
                                seconds, that the Platform SHOULD use as the Service's
                                maximum polling duration.
                              type: integer
                            metadata:
                              description: Metadata is an opaque object of metadata
                                for a Service Plan. It is expected that Platforms
                                will treat this as a blob. Note that there are conventions
                                in existing Service Brokers and Platforms for fields
                                that aid in the display of catalog data.
                              type: object
                            name:
                              description: Name is the name of the Service Plan. MUST
                                be unique within the Service Offering. MUST be a non-empty
                                string. Using a CLI-friendly name is RECOMMENDED.
                              minLength: 1
                              type: string
                            plan_updatable:
                              description: PlanUpdatable specifies whether the Plan
                                supports upgrade/downgrade/sidegrade to another version.
                                This field is OPTIONAL. If specificed, this takes
                                precedence over the Service Offering's plan_updateable
                                field. If not specified, the default is derived from
                                the Service Offering. Please note that the attribute
                                is intentionally misspelled as plan_updateable for
                                legacy reasons.
                              type: boolean
                            schemas:
                              description: Schemas are schema definitions for Service
                                Instances and Service Bindings for the Service Plan.
                              properties:
                                service_binding:
                                  description: ServiceBinding is the schema definition
                                    for creating a Service Binding. Used only if the
                                    Service Plan is bindable.
                                  properties:
                                    create:
                                      description: Create is the schema definition
                                        for creating a Service Binding.
                                      properties:
                                        parameters:
                                          description: Parameters is the schema definition
                                            for the input parameters. Each input parameter
                                            is expressed as a property within a JSON
                                            object.
                                          type: object
                                      type: object
                                  type: object
                                service_instance:
                                  description: ServiceInstance is the schema definitions
                                    for creating and updating a Service Instance.
                                  properties:
                                    create:
                                      description: Create is the schema definition
                                        for creating a Service Instance.
                                      properties:
                                        parameters:
                                          description: Parameters is the schema definition
                                            for the input parameters. Each input parameter
                                            is expressed as a property within a JSON
                                            object.
                                          type: object
                                      type: object
                                    update:
                                      description: Update is the chema definition
                                        for updating a Service Instance.
                                      properties:
                                        parameters:
                                          description: Parameters is the schema definition
                                            for the input parameters. Each input parameter
                                            is expressed as a property within a JSON
                                            object.
                                          type: object
                                      type: object
                                  type: object
                              type: object
                          required:
                          - description
                          - id
                          - name
                          type: object
                        minItems: 1
                        type: array
                      requires:
                        description: Requires is a list of permissions that the user
                          would have to give the service, if they provision it. The
                          only permissions currently supported are syslog_drain, route_forwarding
                          and volume_mount.
                        enum:
                        - syslog_drain
                        - route_forwarding
                        - volume_mount
                        items:
                          type: string
                        type: array
                      tags:
                        description: Tags provide a flexible mechanism to expose a
                          classification, attribute, or base technology of a service,
                          enabling equivalent services to be swapped out without changes
                          to dependent logic in applications, buildpacks, or other
                          services. E.g. mysql, relational, redis, key-value, caching,
                          messaging, amqp.
                        items:
                          type: string
                        type: array
                    required:
                    - bindable
                    - description
                    - id
                    - name
                    - plans
                    type: object
                  type: array
              required:
              - services
              type: object
            templates:
              description: Templates is a set of resource templates that can be rendered
                by the service broker and is required.
              items:
                description: CouchbaseServiceBrokerConfigTemplate defines a resource
                  template for use when either creating a service instance or service
                  binding.
                properties:
                  name:
                    description: Name is the name of the template
                    minLength: 1
                    type: string
                  parameters:
                    description: Parameters allow parameters to be sourced either
                      from request metadata or request parameters as defined in the
                      service catalog.  If specified they will override existing values.  If
                      not then the existing config will be left in place.  When there
                      is no existing configuration and no parameter is specified in
                      the request then an optional default value is used.
                    items:
                      description: CouchbaseServiceBrokerConfigTemplateParameter defines
                        a parameter substitution on a resource template.
                      properties:
                        default:
                          description: Default specifies the default value is if the
                            parameter is not defined.
                          properties:
                            bool:
                              description: Bool specifies the default boolean value
                                if the parameter is not defined.
                              type: boolean
                            int:
                              description: Int specifies the default int value if
                                the parameter is not defined.
                              type: integer
                            object:
                              description: Object specifies the default value if the
                                parameter is not defined.
                              type: object
                            string:
                              description: String specifies the default string value
                                if the parameter is not defined.
                              type: string
                          type: object
                        destinations:
                          description: Destinations is the destination of the parameter.
                          items:
                            description: CouchbaseServiceBrokerConfigTemplateParameterDestination
                              defines where to patch parameters into the resource
                              template.
                            properties:
                              path:
                                description: Path is a JSON pointer in the resource
                                  template to patch the parameter.
                                type: string
                              registry:
                                description: Registry is a key to store the value
                                  to in the registry.
                                type: string
                            type: object
                          minItems: 1
                          type: array
                        name:
                          description: Name is a textual name used to uniquely identify
                            the parameter for the template.
                          minLength: 1
                          type: string
                        required:
                          description: Required will cause an error if a parameter
                            is not defined.
                          type: boolean
                        source:
                          description: Source is source of the parameter.
                          properties:
                            format:
                              description: Format allows the collection of an arbitrary
                                number of parameters into a string format.
                              properties:
                                parameters:
                                  description: Parameters is the set of parameters
                                    corresponding to the format string. All parameters
                                    must exist or the formatting operation will return
                                    nil.
                                  items:
                                    description: CouchbaseServiceBrokerConfigTemplateParameterSourceFormatParameter
                                      is a parameter for a formatting operation.
                                    properties:
                                      parameter:
                                        description: Parameter, if set, uses the corresponding
                                          request parameter for the parameter source.
                                        type: string
                                      registry:
                                        description: Registry , if set, uses the corresponding
                                          registry value for the parameter source.
                                        pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                        type: string
                                    type: object
                                  minItems: 1
                                  type: array
                                string:
                                  description: String is the format string to use.
                                  type: string
                              required:
                              - parameters
                              - string
                              type: object
                            generateCertificate:
                              description: GenerateCertificate allows the generation
                                of a public certificate.
                              properties:
                                alternativeNames:
                                  description: AlternativeNames are only valid for
                                    "server" and "client" certificates.
                                  properties:
                                    dns:
                                      description: DNS is only relevant for "server"
                                        certificate types.
                                      items:
                                        description: CouchbaseServiceBrokerConfigTemplateParameterSourceFormatParameter
                                          is a parameter for a formatting operation.
                                        properties:
                                          parameter:
                                            description: Parameter, if set, uses the
                                              corresponding request parameter for
                                              the parameter source.
                                            type: string
                                          registry:
                                            description: Registry , if set, uses the
                                              corresponding registry value for the
                                              parameter source.
                                            pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                            type: string
                                        type: object
                                      type: array
                                    email:
                                      description: Email is only relevant for "client"
                                        certificate types.
                                      items:
                                        description: CouchbaseServiceBrokerConfigTemplateParameterSourceFormatParameter
                                          is a parameter for a formatting operation.
                                        properties:
                                          parameter:
                                            description: Parameter, if set, uses the
                                              corresponding request parameter for
                                              the parameter source.
                                            type: string
                                          registry:
                                            description: Registry , if set, uses the
                                              corresponding registry value for the
                                              parameter source.
                                            pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                ca:
                                  description: CA is the CA to sign with, it will
                                    self sign otherwise.
                                  properties:
                                    certificate:
                                      description: Certificate is the CA's certificate.
                                      properties:
                                        parameter:
                                          description: Parameter, if set, uses the
                                            corresponding request parameter for the
                                            parameter source.
                                          type: string
                                        registry:
                                          description: Registry , if set, uses the
                                            corresponding registry value for the parameter
                                            source.
                                          pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                          type: string
                                      type: object
                                    key:
                                      description: Key is the CA's private key.
                                      properties:
                                        parameter:
                                          description: Parameter, if set, uses the
                                            corresponding request parameter for the
                                            parameter source.
                                          type: string
                                        registry:
                                          description: Registry , if set, uses the
                                            corresponding registry value for the parameter
                                            source.
                                          pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                          type: string
                                      type: object
                                  required:
                                  - certificate
                                  - key
                                  type: object
                                key:
                                  description: Key is the private key to generate
                                    the certificate from.
                                  properties:
                                    parameter:
                                      description: Parameter, if set, uses the corresponding
                                        request parameter for the parameter source.
                                      type: string
                                    registry:
                                      description: Registry , if set, uses the corresponding
                                        registry value for the parameter source.
                                      pattern: ^(instance:)?[a-zA-Z0-9-]+$
                                      type: string
                                  type: object
                                lifetime:
                                  description: Lifetime is how long the certificate
                                    will last.
                                  type: string
                                name:
                                  description: Name is the certificate name.
                                  properties:
                                    commonName:
                                      description: CommonName is what the certificate
                                        name is usually referred to.
                                      type: string
                                  required:
                                  - commonName
                                  type: object
                                usage:
                                  description: Usage is what the certificate is used
                                    for.  If server or client is specified then the
                                    CA parameter must be populated.  If CA is not
                                    specified for a "ca" certificate then it will
                                    be self signed.
                                  enum:
                                  - ca
                                  - server
                                  - client
                                  type: string
                              required:
                              - key
                              - lifetime
                              - name
                              - usage
                              type: object
                            generateKey:
                              description: GenerateKey allow the generation of a private
                                key.
                              properties:
                                bits:
                                  description: Bits is the number of bits of key to
                                    generate, only relevant for RSA.
                                  type: integer
                                encoding:
                                  description: Encoding is how to package the key.
                                  type: string
                                type:
                                  description: Type is the type of key as defined
                                    above.
                                  type: string
                              required:
                              - encoding
                              - type
                              type: object
                            generatePassword:
                              description: GeneratePassword allows the generation
                                of a random string, useful for password generation.
                              properties:
                                dictionary:
                                  description: Dictionary is the string of symbols
                                    to use.  This defaults to [a-zA-Z0-9].
                                  type: string
                                length:
                                  description: Length is the length of the string
                                    to generate.
                                  minimum: 1
                                  type: integer
                              required:
                              - length
                              type: object
                            parameter:
                              description: Parameter, if set, uses the corresponding
                                request parameter for the parameter source.
                              type: string
                            registry:
                              description: Registry, if set, uses the corresponding
                                registry value for the parameter source.
                              pattern: ^(instance:)?[a-zA-Z0-9-]+$
                              type: string
                            template:
                              description: Template allows the recursive rendering
                                and inclusion of a named template.
                              type: string
                          type: object
                      required:
                      - destinations
                      - name
                      type: object
                    type: array
                  singleton:
                    description: Singleton alters the behaviour of resource creation.  Typically
                      we will create a resource and use parameters to alter it's name,
                      ensuring it doesn't already exist.  Singleton resources will
                      first check to see whether they exist before attempting creation.
                    type: boolean
                  template:
                    description: Template defines the resource template, it can be
                      any kind of resource supported by client-go or couchbase.
                    type: object
                required:
                - name
                - template
                type: object
              minItems: 1
              type: array
          required:
          - bindings
          - catalog
          - templates
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
