// Copyright (C) Couchbase, Inc 2020

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/couchbase/service-broker/pkg/apis/servicebroker/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ServiceBrokerConfigLister helps list ServiceBrokerConfigs.
type ServiceBrokerConfigLister interface {
	// List lists all ServiceBrokerConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceBrokerConfig, err error)
	// ServiceBrokerConfigs returns an object that can list and get ServiceBrokerConfigs.
	ServiceBrokerConfigs(namespace string) ServiceBrokerConfigNamespaceLister
	ServiceBrokerConfigListerExpansion
}

// serviceBrokerConfigLister implements the ServiceBrokerConfigLister interface.
type serviceBrokerConfigLister struct {
	indexer cache.Indexer
}

// NewServiceBrokerConfigLister returns a new ServiceBrokerConfigLister.
func NewServiceBrokerConfigLister(indexer cache.Indexer) ServiceBrokerConfigLister {
	return &serviceBrokerConfigLister{indexer: indexer}
}

// List lists all ServiceBrokerConfigs in the indexer.
func (s *serviceBrokerConfigLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceBrokerConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceBrokerConfig))
	})
	return ret, err
}

// ServiceBrokerConfigs returns an object that can list and get ServiceBrokerConfigs.
func (s *serviceBrokerConfigLister) ServiceBrokerConfigs(namespace string) ServiceBrokerConfigNamespaceLister {
	return serviceBrokerConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ServiceBrokerConfigNamespaceLister helps list and get ServiceBrokerConfigs.
type ServiceBrokerConfigNamespaceLister interface {
	// List lists all ServiceBrokerConfigs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceBrokerConfig, err error)
	// Get retrieves the ServiceBrokerConfig from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ServiceBrokerConfig, error)
	ServiceBrokerConfigNamespaceListerExpansion
}

// serviceBrokerConfigNamespaceLister implements the ServiceBrokerConfigNamespaceLister
// interface.
type serviceBrokerConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ServiceBrokerConfigs in the indexer for a given namespace.
func (s serviceBrokerConfigNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceBrokerConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceBrokerConfig))
	})
	return ret, err
}

// Get retrieves the ServiceBrokerConfig from the indexer for a given namespace and name.
func (s serviceBrokerConfigNamespaceLister) Get(name string) (*v1alpha1.ServiceBrokerConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("servicebrokerconfig"), name)
	}
	return obj.(*v1alpha1.ServiceBrokerConfig), nil
}
